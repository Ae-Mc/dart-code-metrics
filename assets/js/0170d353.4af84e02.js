(self.webpackChunkdart_code_metrics_website=self.webpackChunkdart_code_metrics_website||[]).push([[2375],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(n),f=o,m=p["".concat(c,".").concat(f)]||p[f]||d[f]||a;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9079:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return p}});var r=n(2122),o=n(9756),a=(n(7294),n(3905)),i=["components"],l={},c="Check unused files",s={unversionedId:"cli/check-unused-files",id:"cli/check-unused-files",isDocsHomePage:!1,title:"Check unused files",description:"Checks unused *.dart files. To execute the command, run",source:"@site/docs/cli/check-unused-files.md",sourceDirName:"cli",slug:"/cli/check-unused-files",permalink:"/docs/cli/check-unused-files",editUrl:"https://github.com/dart-code-checker/website/blob/main/docs/cli/check-unused-files.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Analyze",permalink:"/docs/cli/analyze"},next:{title:"Check unused l10n",permalink:"/docs/cli/check-unused-l10n"}},u=[{value:"Output example",id:"output-example",children:[{value:"Console",id:"console",children:[],level:3},{value:"JSON",id:"json",children:[{value:"The <strong>root</strong> object fields are",id:"the-root-object-fields-are",children:[],level:4},{value:"The <strong>unusedFiles</strong> object fields are",id:"the-unusedfiles-object-fields-are",children:[],level:4}],level:3}],level:2}],d={toc:u};function p(e){var t=e.components,l=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"check-unused-files"},"Check unused files"),(0,a.kt)("p",null,"Checks unused ",(0,a.kt)("inlineCode",{parentName:"p"},"*.dart")," files. To execute the command, run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"$ dart run dart_code_metrics:metrics check-unused-files lib\n\n# or for a Flutter package\n$ flutter pub run dart_code_metrics:metrics check-unused-files lib\n")),(0,a.kt)("p",null,"Full command description:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},'Usage: metrics check-unused-files [arguments...] <directories>\n\n-h, --help                                        Print this usage information.\n\n\n-r, --reporter=<console>                          The format of the output of the analysis.\n                                                  [console (default), json]\n\n\n    --root-folder=<./>                            Root folder.\n                                                  (defaults to current directory)\n    --sdk-path=<directory-path>                   Dart SDK directory path. \n                                                  Should be provided only when you run the application as compiled executable(https://dart.dev/tools/dart-compile#exe) and automatic Dart SDK path detection fails.\n    --exclude=<{/**.g.dart,/**.template.dart}>    File paths in Glob syntax to be exclude.\n                                                  (defaults to "{/**.g.dart,/**.template.dart}")\n')),(0,a.kt)("h2",{id:"output-example"},"Output example"),(0,a.kt)("h3",{id:"console"},"Console"),(0,a.kt)("p",null,"Use ",(0,a.kt)("inlineCode",{parentName:"p"},"--reporter=console")," to enable this format."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Console",src:n(7538).Z})),(0,a.kt)("h3",{id:"json"},"JSON"),(0,a.kt)("p",null,"The reporter prints a single JSON object containing meta information and the unused file paths. Use ",(0,a.kt)("inlineCode",{parentName:"p"},"--reporter=json")," to enable this format."),(0,a.kt)("h4",{id:"the-root-object-fields-are"},"The ",(0,a.kt)("strong",{parentName:"h4"},"root")," object fields are"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"formatVersion")," - an integer representing the format version (will be incremented each time the serialization format changes)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"timestamp")," - a creation time of the report in YYYY-MM-DD HH:MM:SS format"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"unusedFiles")," - an array of ",(0,a.kt)("a",{parentName:"li",href:"#the-unusedFiles-object-fields-are"},"unused files"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-JSON"},'{\n  "formatVersion": 2,\n  "timestamp": "2021-04-11 14:44:42",\n  "unusedFiles": [\n    {\n      ...\n    },\n    {\n      ...\n    },\n    {\n      ...\n    }\n  ]\n}\n')),(0,a.kt)("h4",{id:"the-unusedfiles-object-fields-are"},"The ",(0,a.kt)("strong",{parentName:"h4"},"unusedFiles")," object fields are"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"path")," - a relative path of the unused file")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-JSON"},'{\n  "path": "lib/src/some/file.dart",\n}\n')))}p.isMDXComponent=!0},7538:function(e,t,n){"use strict";t.Z=n.p+"assets/images/unused-files-console-report-56cf3f9cba79c41cd565fefca6e133e3.png"}}]);