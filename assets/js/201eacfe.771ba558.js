"use strict";(self.webpackChunkdart_code_metrics_website=self.webpackChunkdart_code_metrics_website||[]).push([[2971],{3905:function(e,r,n){n.d(r,{Zo:function(){return u},kt:function(){return f}});var t=n(7294);function i(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){i(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function a(e,r){if(null==e)return{};var n,t,i=function(e,r){if(null==e)return{};var n,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(i[n]=e[n]);return i}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=t.createContext({}),p=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):l(l({},r),e)),n},u=function(e){var r=p(e.components);return t.createElement(c.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef((function(e,r){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=p(n),f=i,m=d["".concat(c,".").concat(f)]||d[f]||s[f]||o;return n?t.createElement(m,l(l({ref:r},u),{},{components:n})):t.createElement(m,l({ref:r},u))}));function f(e,r){var n=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var o=n.length,l=new Array(o);l[0]=d;var a={};for(var c in r)hasOwnProperty.call(r,c)&&(a[c]=r[c]);a.originalType=e,a.mdxType="string"==typeof e?e:i,l[1]=a;for(var p=2;p<o;p++)l[p]=n[p];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8297:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return u},default:function(){return d}});var t=n(7462),i=n(3366),o=(n(7294),n(3905)),l=["components"],a={},c="Prefer correct identifier length",p={unversionedId:"rules/common/prefer-correct-identifier-length",id:"rules/common/prefer-correct-identifier-length",title:"Prefer correct identifier length",description:"Configurable",source:"@site/docs/rules/common/prefer-correct-identifier-length.md",sourceDirName:"rules/common",slug:"/rules/common/prefer-correct-identifier-length",permalink:"/docs/rules/common/prefer-correct-identifier-length",editUrl:"https://github.com/dart-code-checker/dart-code-metrics/tree/master/website/docs/rules/common/prefer-correct-identifier-length.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Prefer conditional expressions",permalink:"/docs/rules/common/prefer-conditional-expressions"},next:{title:"Prefer correct type name",permalink:"/docs/rules/common/prefer-correct-type-name"}},u=[{value:"Rule id",id:"rule-id",children:[],level:2},{value:"Severity",id:"severity",children:[],level:2},{value:"Description",id:"description",children:[{value:"Config example",id:"config-example",children:[],level:3},{value:"Example",id:"example",children:[],level:3}],level:2}],s={toc:u};function d(e){var r=e.components,n=(0,i.Z)(e,l);return(0,o.kt)("wrapper",(0,t.Z)({},s,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"prefer-correct-identifier-length"},"Prefer correct identifier length"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/-configurable-informational",alt:"Configurable"})),(0,o.kt)("h2",{id:"rule-id"},"Rule id"),(0,o.kt)("p",null,"prefer-correct-identifier-length"),(0,o.kt)("h2",{id:"severity"},"Severity"),(0,o.kt)("p",null,"Style"),(0,o.kt)("h2",{id:"description"},"Description"),(0,o.kt)("p",null,"The rule checks the length of variable names in classes, functions, extensions, mixins, and also checks the value of enum."),(0,o.kt)("p",null,"The rule can be configured using fields ",(0,o.kt)("inlineCode",{parentName:"p"},"max-identifier-length")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"min-identifier-length"),". By\ndefault ",(0,o.kt)("inlineCode",{parentName:"p"},"max-identifier-length = 300")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"min-identifier-length = 3"),". You can also add\nexceptions ",(0,o.kt)("inlineCode",{parentName:"p"},"exceptions"),"."),(0,o.kt)("h3",{id:"config-example"},"Config example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"dart_code_metrics:\n  ...\n  rules:\n    ...\n    - prefer-correct-identifier-length:\n        exceptions: [ 'z' ]\n        max-identifier-length: 30\n        min-identifier-length: 4\n")),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("p",null,"Bad:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"\nvar x = 0; // length equals 1\nvar multiplatformConfigurationPoint = 0; // length equals 31\n")),(0,o.kt)("p",null,"Good:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"\nvar property = 0; // length equals 8\nvar multiplatformConfiguration = 0; // length equals 26\n")))}d.isMDXComponent=!0}}]);