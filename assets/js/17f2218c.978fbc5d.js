"use strict";(self.webpackChunkdart_code_metrics_website=self.webpackChunkdart_code_metrics_website||[]).push([[8854],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=l(t),d=o,y=m["".concat(c,".").concat(d)]||m[d]||p[d]||a;return t?r.createElement(y,i(i({ref:n},u),{},{components:t})):r.createElement(y,i({ref:n},u))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2153:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return m}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],s={},c="Avoid unnecessary type assertions",l={unversionedId:"rules/common/avoid-unnecessary-type-assertions",id:"rules/common/avoid-unnecessary-type-assertions",isDocsHomePage:!1,title:"Avoid unnecessary type assertions",description:"Rule id",source:"@site/docs/rules/common/avoid-unnecessary-type-assertions.md",sourceDirName:"rules/common",slug:"/rules/common/avoid-unnecessary-type-assertions",permalink:"/docs/rules/common/avoid-unnecessary-type-assertions",editUrl:"https://github.com/dart-code-checker/website/blob/main/docs/rules/common/avoid-unnecessary-type-assertions.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Avoid non null assertion",permalink:"/docs/rules/common/avoid-non-null-assertion"},next:{title:"Avoid unused parameters",permalink:"/docs/rules/common/avoid-unused-parameters"}},u=[{value:"Rule id",id:"rule-id",children:[],level:2},{value:"Description",id:"description",children:[{value:"Example",id:"example",children:[{value:"Example 1 Check is same type",id:"example-1-check-is-same-type",children:[],level:4},{value:"Example 2 whereType method",id:"example-2-wheretype-method",children:[],level:4}],level:3}],level:2}],p={toc:u};function m(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"avoid-unnecessary-type-assertions"},"Avoid unnecessary type assertions"),(0,a.kt)("h2",{id:"rule-id"},"Rule id"),(0,a.kt)("p",null,"avoid-unnecessary-type-assertions"),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"Warns about unnecessary usage of 'is' and 'whereType' operators."),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("h4",{id:"example-1-check-is-same-type"},"Example 1 Check is same type"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"class Example {\n  final myList = <int>[1, 2, 3];\n\n  void main() {\n    final result = myList is List<int>; // LINT\n    myList.whereType<int>();\n  }\n}\n")),(0,a.kt)("h4",{id:"example-2-wheretype-method"},"Example 2 whereType method"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"main(){\n  ['1', '2'].whereType<String?>(); // LINT\n}\n")))}m.isMDXComponent=!0}}]);