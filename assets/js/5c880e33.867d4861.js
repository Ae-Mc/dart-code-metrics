"use strict";(self.webpackChunkdart_code_metrics_website=self.webpackChunkdart_code_metrics_website||[]).push([[5257],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var a=r.createContext({}),c=function(e){var n=r.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(a.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(t),m=i,f=u["".concat(a,".").concat(m)]||u[m]||d[m]||o;return t?r.createElement(f,l(l({ref:n},p),{},{components:t})):r.createElement(f,l({ref:n},p))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,l=new Array(o);l[0]=u;var s={};for(var a in n)hasOwnProperty.call(n,a)&&(s[a]=n[a]);s.originalType=e,s.mdxType="string"==typeof e?e:i,l[1]=s;for(var c=2;c<o;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6970:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return a},metadata:function(){return c},toc:function(){return p},default:function(){return u}});var r=t(7462),i=t(3366),o=(t(7294),t(3905)),l=["components"],s={},a="Avoid nested conditional expressions",c={unversionedId:"rules/common/avoid-nested-conditional-expressions",id:"rules/common/avoid-nested-conditional-expressions",title:"Avoid nested conditional expressions",description:"Configurable",source:"@site/docs/rules/common/avoid-nested-conditional-expressions.md",sourceDirName:"rules/common",slug:"/rules/common/avoid-nested-conditional-expressions",permalink:"/docs/rules/common/avoid-nested-conditional-expressions",editUrl:"https://github.com/dart-code-checker/dart-code-metrics/tree/master/website/docs/rules/common/avoid-nested-conditional-expressions.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Avoid missing enum constant in map",permalink:"/docs/rules/common/avoid-missing-enum-constant-in-map"},next:{title:"Avoid non null assertion",permalink:"/docs/rules/common/avoid-non-null-assertion"}},p=[{value:"Rule id",id:"rule-id",children:[],level:2},{value:"Severity",id:"severity",children:[],level:2},{value:"Description",id:"description",children:[{value:"Config example",id:"config-example",children:[],level:3},{value:"Example",id:"example",children:[],level:3}],level:2}],d={toc:p};function u(e){var n=e.components,t=(0,i.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"avoid-nested-conditional-expressions"},"Avoid nested conditional expressions"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/-configurable-informational",alt:"Configurable"})),(0,o.kt)("h2",{id:"rule-id"},"Rule id"),(0,o.kt)("p",null,"avoid-nested-conditional-expressions"),(0,o.kt)("h2",{id:"severity"},"Severity"),(0,o.kt)("p",null,"Style"),(0,o.kt)("h2",{id:"description"},"Description"),(0,o.kt)("p",null,"Checks for nested conditional expressions."),(0,o.kt)("p",null,"Use ",(0,o.kt)("inlineCode",{parentName:"p"},"acceptable-level")," configuration, if you want to set the acceptable nesting level (default is 1)."),(0,o.kt)("h3",{id:"config-example"},"Config example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"dart_code_metrics:\n  ...\n  rules:\n    ...\n    - avoid-nested-conditional-expressions:\n        acceptable-level: 2\n")),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("p",null,"Bad:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"final str = '';\n\nfinal oneLevel = str.isEmpty ? 'hi' : '1';\n\nfinal twoLevels = str.isEmpty\n    ? str.isEmpty // LINT\n        ? 'hi'\n        : '1'\n    : '2';\n\nfinal threeLevels = str.isEmpty\n    ? str.isEmpty // LINT\n        ? str.isEmpty // LINT\n            ? 'hi'\n            : '1'\n        : '2'\n    : '3';\n")),(0,o.kt)("p",null,"Good:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"final str = '';\n\nfinal oneLevel = str.isEmpty ? 'hi' : '1';\n\nfinal twoLevels = _getStr(str);\n\nString _getStr(String str) {\n    if (str.isEmpty) {\n        return 'hi';\n    }\n\n    ...\n}\n")))}u.isMDXComponent=!0}}]);